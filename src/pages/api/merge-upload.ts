import { NextApiRequest, NextApiResponse } from 'next'
import { Redis } from '@upstash/redis'

const redis = new Redis({
    url: process.env.UPSTASH_REDIS_REST_URL!,
    token: process.env.UPSTASH_REDIS_REST_TOKEN!,
})

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
    if (req.method !== 'POST') {
        return res.status(405).json({ error: 'Ph∆∞∆°ng th·ª©c kh√¥ng ƒë∆∞·ª£c h·ªó tr·ª£' })
    }

    const { videoFile, audioFile, outputName } = req.body

    if (!videoFile || !audioFile || !outputName) {
        return res.status(400).json({ error: 'Thi·∫øu th√¥ng tin video, audio ho·∫∑c output' })
    }

    try {
        await redis.rpush('ffmpeg-jobs:merge', JSON.stringify({
            video: videoFile,
            audio: audioFile,
            outputName,
        }))

        console.log(`üì• Merge job ƒë√£ th√™m v√†o h√†ng ƒë·ª£i: ${outputName}`)
        return res.status(200).json({ message: 'ƒê√£ g·ª≠i job merge' })
    } catch (err) {
        console.error('‚ùå G·ª≠i job merge th·∫•t b·∫°i:', err)
        return res.status(500).json({ error: 'G·ª≠i job merge th·∫•t b·∫°i' })
    }
}
